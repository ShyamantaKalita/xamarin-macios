#!/bin/groovy

def isPr = (env.ghprbPullId && !env.ghprbPullId.empty ? true : false)
def branchName = (isPr ? ("pr" + env.ghprbPullId) : env.BRANCH_NAME)
def gitHash = null
def xiPackageUrl = null
def xmPackageUrl = null
def utils = null

def xiPackageFilename = null
def xmPackageFilename = null

timestamps {
    node('felix-sierra') {
        dir('xamarin-macios') {
            stage('checkout') {
                scmVars = checkout scm
                sh('env')
                sh('pwd')
                sh('ls -la')
                sh('./jenkins/build-package.sh')
                utils = load "./jenkins/utils.groovy"
                sh('ls -la ..')
                sh('ls -la ../package')
                xiPackageFileName = findFiles (glob: "../package/xamarin.ios-*.pkg")[0].name
                xmPackageFileName = findFiles (glob: "../package/xamarin.mac-*.pkg")[0].name
            }
            stage('Signing') {
                utils.signPackage ("../package", xiPackageFilename)
                utils.signPackage ("../package", xmPackageFilename)
            }
            stage('report status') {
                gitHash = (isPr ? (env.ghprbActualCommit) : scmVars.GIT_COMMIT)
                xiPackageUrl = "http://bosstoragemirror.blob.core.windows.net/wrench/jenkins/${branchName}/${gitHash}/${env.BUILD_NUMBER}/package/${xiPackageFilename}"
                xiPackageUrl = "http://bosstoragemirror.blob.core.windows.net/wrench/jenkins/${branchName}/${gitHash}/${env.BUILD_NUMBER}/package/${xmPackageFilename}"
                utils.reportGitHubStatus (gitHash, 'jenkins-PKG-Xamarin.iOS', "${xiPackageUrl}", 'SUCCESS', "${xiPackageFilename}")
                utils.reportGitHubStatus (gitHash, 'jenkins-PKG-Xamarin.Mac', "${xmPackageUrl}", 'SUCCESS', "${xmPackageFilename}")
            }
        }
    }
}
